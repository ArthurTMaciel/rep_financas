colnames(capm1) <- c("Ri","Rm")
CAPM <- lm(capm1$Ri ~ capm1$Rm)
BetaPRIO3 <- coef(CAPM)[2]
paste("BetaPRIO3",print(BetaPRIO3))
capm1 <- data.frame((Ddsprova$BRKM3 - Ddsprova$DI),(Ddsprova$IBOV - Ddsprova$DI))
colnames(capm1) <- c("Ri","Rm")
CAPM <- lm(capm1$Ri ~ capm1$Rm)
BetaBRKM3 <- coef(CAPM)[2]
paste("BetaBRKM3",print(BetaBRKM3))
capm1 <- data.frame((Ddsprova$RADL3 - Ddsprova$DI),(Ddsprova$IBOV - Ddsprova$DI))
colnames(capm1) <- c("Ri","Rm")
CAPM <- lm(capm1$Ri ~ capm1$Rm)
BetaRADL3 <- coef(CAPM)[2]
paste("BetaRADL3",print(BetaRADL3))
capm1 <- data.frame((Ddsprova$FLRY3 - Ddsprova$DI),(Ddsprova$IBOV - Ddsprova$DI))
colnames(capm1) <- c("Ri","Rm")
CAPM <- lm(capm1$Ri ~ capm1$Rm)
BetaFLRY3 <- coef(CAPM)[2]
paste("BetaFLRY3",print(BetaFLRY3))
capm1 <- data.frame((Ddsprova$VALE3 - Ddsprova$DI),(Ddsprova$IBOV - Ddsprova$DI))
colnames(capm1) <- c("Ri","Rm")
CAPM <- lm(capm1$Ri ~ capm1$Rm)
BetaVALE3 <- coef(CAPM)[2]
paste("BetaVALE3",print(BetaVALE3))
capm1 <- data.frame((Ddsprova$CRFB3 - Ddsprova$DI),(Ddsprova$IBOV - Ddsprova$DI))
colnames(capm1) <- c("Ri","Rm")
CAPM <- lm(capm1$Ri ~ capm1$Rm)
BetaCRFB3 <- coef(CAPM)[2]
paste("BetaCRFB3",print(BetaCRFB3))
Betas <- data.frame(
Betas <- c('BetaABEV3','BetaBBAS3','BetaBBDC3','BetaBOBR4','BetaBRKM3','BetaCRFB3','BetaFLRY3','BetaGGBR4','BetaITUB3','BetaKEPL3','BetaPETR4','BetaPRIO3','BetaRADL3','BetaRENT3','BetaTASA3','BetaUSIM3','BetaVALE3')
Valores <- c(BetaABEV3,BetaBBAS3,BetaBBDC3,BetaBOBR4,BetaBRKM3,BetaCRFB3,BetaFLRY3,BetaGGBR4,BetaITUB3,BetaKEPL3,BetaPETR4,BetaPRIO3,BetaRADL3,BetaRENT3,BetaTASA3,BetaUSIM3,BetaVALE3))
Betas <- data.frame(
Betas <- c('BetaABEV3','BetaBBAS3','BetaBBDC3','BetaBOBR4','BetaBRKM3','BetaCRFB3','BetaFLRY3','BetaGGBR4','BetaITUB3','BetaKEPL3','BetaPETR4','BetaPRIO3','BetaRADL3','BetaRENT3','BetaTASA3','BetaUSIM3','BetaVALE3')
Valores <- c(BetaABEV3,BetaBBAS3,BetaBBDC3,BetaBOBR4,BetaBRKM3,BetaCRFB3,BetaFLRY3,BetaGGBR4,BetaITUB3,BetaKEPL3,BetaPETR4,BetaPRIO3,BetaRADL3,BetaRENT3,BetaTASA3,BetaUSIM3,BetaVALE3))
Betas <- c('BetaABEV3','BetaBBAS3','BetaBBDC3','BetaBOBR4','BetaBRKM3','BetaCRFB3','BetaFLRY3','BetaGGBR4','BetaITUB3','BetaKEPL3','BetaPETR4','BetaPRIO3','BetaRADL3','BetaRENT3','BetaTASA3','BetaUSIM3','BetaVALE3')
Valores <- c(BetaABEV3,BetaBBAS3,BetaBBDC3,BetaBOBR4,BetaBRKM3,BetaCRFB3,BetaFLRY3,BetaGGBR4,BetaITUB3,BetaKEPL3,BetaPETR4,BetaPRIO3,BetaRADL3,BetaRENT3,BetaTASA3,BetaUSIM3,BetaVALE3)
betas <- c('BetaABEV3','BetaBBAS3','BetaBBDC3','BetaBOBR4','BetaBRKM3','BetaCRFB3','BetaFLRY3','BetaGGBR4','BetaITUB3','BetaKEPL3','BetaPETR4','BetaPRIO3','BetaRADL3','BetaRENT3','BetaTASA3','BetaUSIM3','BetaVALE3')
Betas <- data.frame(betas,Valores)
Betas
plot(Betas)
View(Betas)
ggplot(Betas, aes(betas,Valores))+
geom_point()
print(Betas)
dados <- Ddsprova[,-c(2,23)]
dados <- as.xts(dados)
vetret <- as.list(seq(0,mean(dados$PETR4), length.out = 250))
matcov <- cov(dados)
rfr <- 0.0002644400
lista <- vector("list",length = length(vetret))
for (i in 1:length(vetret)) {
peso <- vetret[i]
lista[[i]] <- portfolio.optim(dados,
pm = peso,
riskless = FALSE,
rf = rfr,
covmat = matcov,
shorts=F)
}
RiscoF <- unlist(lapply(lista, "[[", "ps"))
RetornF <- unlist(lapply(lista, "[[", "pm"))
PortF <- data.frame(Risco,Retorno)
port.min <- data.frame(
x = RiscoF[which.min(PortF$RiscoF)],
y = RetornoF[which.min(PortF$RiscoF)])
dados <- Ddsprova[,-c(2,23)]
dados <- as.xts(dados)
vetret <- as.list(seq(0,mean(dados$PETR4), length.out = 250))
matcov <- cov(dados)
rfr <- 0.0002644400
lista <- vector("list",length = length(vetret))
for (i in 1:length(vetret)) {
peso <- vetret[i]
lista[[i]] <- portfolio.optim(dados,
pm = peso,
riskless = FALSE,
rf = rfr,
covmat = matcov,
shorts=F)
}
RiscoF <- unlist(lapply(lista, "[[", "ps"))
RetornF <- unlist(lapply(lista, "[[", "pm"))
PortF <- data.frame(RiscoF,RetornoF)
dados <- Ddsprova[,-c(2,23)]
dados <- as.xts(dados)
vetret <- as.list(seq(0,mean(dados$PETR4), length.out = 250))
matcov <- cov(dados)
rfr <- 0.0002644400
lista <- vector("list",length = length(vetret))
for (i in 1:length(vetret)) {
peso <- vetret[i]
lista[[i]] <- portfolio.optim(dados,
pm = peso,
riskless = FALSE,
rf = rfr,
covmat = matcov,
shorts=F)
}
RiscoF <- unlist(lapply(lista, "[[", "ps"))
RetornoF <- unlist(lapply(lista, "[[", "pm"))
PortF <- data.frame(RiscoF,RetornoF)
port.min <- data.frame(
x = RiscoF[which.min(PortF$RiscoF)],
y = RetornoF[which.min(PortF$RiscoF)])
PortF <- PortF %>% mutate(Sharp = (RetornoF-rfr)/RiscoF)
ggplot(data = PortF, aes(x = RiscoF, y = RetornoF)) +
geom_point() +
geom_point(data = port.min, aes(x=x,y=y), color = "red") +
labs(x = "Risco", y = "Retorno dos Potifólios", title = "Fronteira")
dados <- Ddsprova[,-c(2,23)]
dados
View(dados)
Ddsprova
View(Ddsprova)
dados <- Ddsprova[,-c(1,23)]
dados <- Ddsprova[,-c(1,22)]
dados <- as.xts(dados)
vetret <- as.list(seq(0,mean(dados$PETR4), length.out = 250))
matcov <- cov(dados)
rfr <- 0.0002644400
lista <- vector("list",length = length(vetret))
for (i in 1:length(vetret)) {
peso <- vetret[i]
lista[[i]] <- portfolio.optim(dados,
pm = peso,
riskless = FALSE,
rf = rfr,
covmat = matcov,
shorts=F)
}
Risco <- unlist(lapply(lista, "[[", "ps"))
Retorno <- unlist(lapply(lista, "[[", "pm"))
Port <- data.frame(Risco,Retorno)
port.min <- data.frame(
x = Risco[which.min(Port$Risco)],
y = Retorno[which.min(Port$Risco)]
)
Port <- Port %>% mutate(Sharp = (Retorno-rfr)/Risco)
port.max <- data.frame(
x = Risco[which.max(Port$sharpe)],
y = Retorno[which.max(Port$sharpe)])
ggplot(data = Port, aes(x = Risco, y = Retorno)) +
geom_point() +
geom_point(data = port.min, aes(x=x,y=y), color = "red") +
geom_point(data = port.max, aes(x=x,y=y), color = "blue") +
labs(x = "Risco", y = "Retorno dos Potifólios", title = "Fronteira")
listashort <- vector("list",length = length(vetret))
for (i in 1:length(vetret)) {
peso <- vetret[i]
listashort[[i]] <- portfolio.optim(dados,
pm = peso,
riskless = FALSE,
rf = rfr,
covmat = matcov,
shorts=T)
}
Riscoshort <- unlist(lapply(listashort, "[[", "ps"))
Retornoshort <- unlist(lapply(listashort, "[[", "pm"))
Portshort <- data.frame(Riscoshort,Retornoshort)
port.min <- data.frame(
x = Riscoshort[which.min(Portshort$Riscoshort)],
y = Retornoshort[which.min(Portshort$Riscoshort)]
)
ggplot(data = Portshort, aes(x = Riscoshort, y = Retornoshort)) +
geom_point() +
geom_point(data = port.min, aes(x=x,y=y), color = "red") +
labs(x = "Risco", y = "Retorno dos Potifólios", title = "Fronteira")
ggplot(data = Portshort, aes(x = Riscoshort, y = Retornoshort)) +
geom_point() +
geom_point(data = port.min, aes(x=x,y=y), color = "red") +
labs(x = "Risco", y = "Retorno dos Potifólios", title = "Fronteira")
ggplot(data = Port, aes(x = Risco, y = Retorno)) +
geom_point() +
geom_point(data = port.min, aes(x=x,y=y), color = "red") +
labs(x = "Risco", y = "Retorno dos Potifólios", title = "Fronteira")
port.min <- data.frame(
x = Risco[which.min(Port$Risco)],
y = Retorno[which.min(Port$Risco)]
)
ggplot(data = Port, aes(x = Risco, y = Retorno)) +
geom_point() +
geom_point(data = port.min, aes(x=x,y=y), color = "red") +
labs(x = "Risco", y = "Retorno dos Potifólios", title = "Fronteira")
hist(betas)
# Histograma dos betas
hist(Betas$betas)
# Histograma dos betas
hist(Betas$Valores)
print(hist(Betas$Valores))
print(hist(Betas$Valores))
# Teste GRS (Gibbons, Ross, Shanken)
install.packages('GRS.test')
library(GRS.test)
GRSrs <- GRS.test(Ddsprova[,-23], Ddsprova[,23])
test <- as.data.frame(Ddsprova)
View(test)
GRSrs <- GRS.test(test[,-c(1,23)], test[,23])
test[,23]
GRSrs <- GRS.test(test[,-c(1,22)], test[,22])
# Estatística GRS
GRSrs$GRS.stat
# Valor p do teste GRS
GRSrs$GRS.pval
obj1 <- test[, 2:22]
# Subtrair o valor da primeira coluna de cada linha
obj2 <- onj1 - test$DI
# Subtrair o valor da primeira coluna de cada linha
obj2 <- obj1 - test$DI
View(obj2)
GRSrs <- GRS.test(obj2[,-21], obj2[,21])
# Estatística GRS
GRSrs$GRS.stat
# Valor p do teste GRS
GRSrs$GRS.pval
library(tidyverse)
library(PerformanceAnalytics)
library(readxl)
library(car)
library(sn)
library(tseries)
Ddsprova <- read_excel("Ddsprova.xlsx")#Lendo arquivo
Ddsprova$Data <- as.Date(Ddsprova$Data)#transformando em data
Ddsprova <- as.xts(Ddsprova)
Fechamentos <- read_excel("Ddsprova.xlsx", sheet = 3)#fechamentos
prepetr <- Fechamentos$PETR4#fechamentos das ações selecionadas
prevale <-  Fechamentos$VALE3
ggplot(Ddsprova, aes(x = Data, y = PETR4)) +
geom_line() +
labs(x = "Data", y = "Valor", title = "Série Retornos PETR4") +
theme_update()
library(tidyverse)
library(PerformanceAnalytics)
library(readxl)
library(car)
library(sn)
library(tseries)
Ddsprova <- read_excel("Ddsprova.xlsx")#Lendo arquivo
Ddsprova$Data <- as.Date(Ddsprova$Data)#transformando em data
Ddsprova <- as.xts(Ddsprova)
Fechamentos <- read_excel("Ddsprova.xlsx", sheet = 3)#fechamentos
prepetr <- Fechamentos$PETR4#fechamentos das ações selecionadas
prevale <-  Fechamentos$VALE3
ggplot(Ddsprova, aes(x = Data, y = PETR4)) +
geom_line() +
labs(x = "Data", y = "Valor", title = "Série Retornos PETR4") +
theme_update()
library(tidyverse)
library(PerformanceAnalytics)
library(readxl)
library(car)
library(sn)
library(tseries)
Ddsprova <- read_excel("Ddsprova.xlsx")#Lendo arquivo
Ddsprova$Data <- as.Date(Ddsprova$Data)#transformando em data
Fechamentos <- read_excel("Ddsprova.xlsx", sheet = 3)#fechamentos
prepetr <- Fechamentos$PETR4#fechamentos das ações selecionadas
prevale <-  Fechamentos$VALE3
ggplot(Ddsprova, aes(x = Data, y = PETR4)) +
geom_line() +
labs(x = "Data", y = "Valor", title = "Série Retornos PETR4") +
theme_update()
retpetr <-Ddsprova$PETR4# criando objeto com os retornos
table.Stats(retpetr)
ggplot(Ddsprova, aes(x = Data, y = VALE3)) +
geom_line() +
labs(x = "Data", y = "Valor", title = "Série Retornos VALE3") +
theme_update()#grafico da serie de retornos da vale
retvale <- Ddsprova$VALE3# criando objeto com os retornos
table.Stats(retvale)
hist(retvale, breaks = 100)
view(prevale)
# Criar um data frame com os valores e o tempo
df <- data.frame(tempo = seq_along(prevale), valor = prevale)
# Criar o gráfico usando ggplot2
ggplot(df, aes(x = tempo, y = valor)) +
geom_line() +
xlab("Tempo") +
ylab("Preço") +
ggtitle("Série Temporal VALE3") +
theme_update()
hist(retpetr, breaks = 100)
view(prepetr)
# Criar um data frame com os valores e o tempo
df1 <- data.frame(tempo = seq_along(prepetr), valor = prepetr)
# Criar o gráfico usando ggplot2
ggplot(df1, aes(x = tempo, y = valor)) +
geom_line() +
xlab("Tempo") +
ylab("Preço") +
ggtitle("Série Temporal PETR4") +
theme_update()
# Teste de normalidade de Shapiro-Wilk
tstnorm1 <- shapiro.test(retpetr)
# Exibir o resultado do teste
print(tstnorm1)
ggplot(data.frame(x = retpetr), aes(x = x)) +
geom_histogram(aes(y = ..density..), bins = 300, fill = "lightblue", color = "black") +
stat_function(fun = dnorm, args = list(mean = mean(retpetr), sd = sd(retpetr)), color = "red", size = 1) +
labs(y = "Densidade") +
labs(x = "Retorno") +
ggtitle("Comparação Densidades Petr") +
theme_update()
qqPlot(retpetr)
# Teste de normalidade de Shapiro-Wilk
tstnorm2 <- shapiro.test(retvale)
# Exibir o resultado do teste
print(tstnorm2)
ggplot(data.frame(x = retvale), aes(x = x)) +
geom_histogram(aes(y = ..density..), bins = 300, fill = "lightblue", color = "black") +
stat_function(fun = dnorm, args = list(mean = mean(retpetr), sd = sd(retpetr)), color = "red", size = 1) +
labs(y = "Densidade") +
labs(x = "Retorno") +
ggtitle("Comparação Densidades Vale") +
theme_update()
qqPlot(retvale)
quantile(retpetr, probs = 0.05)
quantile(retvale, probs = 0.05)
VaR(R = retpetr, p = 0.95, method = "gaussian")
VaR(R = retvale, p = 0.95, method = "gaussian")
qqPlot(retpetr, distribution = 't', df = 3)
qqPlot(retvale, distribution = 't', df = 4)
VaR(retpetr, df = 3)
VaR(retvale, df = 4)
# Cálculo dos valores
quant_05 <- quantile(retpetr, probs = 0.05)
var_gaussian <- VaR(R = retpetr, p = 0.95, method = "gaussian")
var_df3 <- VaR(retpetr, df = 3)
st.fit = st.mple(y = retpetr)#ajusando dados para fazer screwt
# Cálculo do VaR com nível de confiança de 95% usando a distribuição skew-t ajustada
var_screwtpe = qst(.05, xi = st.fit$dp[1], omega = st.fit$dp[2], alpha = st.fit$dp[3], nu = st.fit$dp[4])
# Criação do gráfico
dfgrf <- data.frame(Objetos = c("VaR Hist", "VaR Gauss", "VaR t-st","screwt"),
Valores = c(quant_05, var_gaussian, var_df3,var_screwtpe))
# Criação do gráfico com ggplot2
ggplot(dfgrf, aes(x = Valores, y = Objetos)) +
geom_point( size = 3) +
labs(x = "Método", y = "Valor") +
geom_text(aes(label = Objetos),  hjust = .5, vjust = -2, color = "black", size = 3) +
ggtitle("Comparação dos Valores") +
theme_update()
# Cálculo dos valores
quant_05va <- quantile(retvale, probs = 0.05)
var_gaussianva <- VaR(R = retvale, p = 0.95, method = "gaussian")
var_df3va <- VaR(retvale, df = 4)
st.fitva = st.mple(y = retvale)#ajusando dados para fazer screwt
# Cálculo do VaR com nível de confiança de 95% usando a distribuição skew-t ajustada
var_screwtva = qst(.05, xi = st.fitva$dp[1], omega = st.fitva$dp[2], alpha = st.fitva$dp[3], nu = st.fitva$dp[4])
# Criação do gráfico
dfgrf1 <- data.frame(Objetos = c("VaR Hist.", "VaR Gaus", "VaR t-st","screwt"),
Valores = c(quant_05va, var_gaussianva, var_df3va,var_screwtva))
# Criação do gráfico com ggplot2
ggplot(dfgrf1, aes(x = Valores, y = Objetos )) +
geom_point( size = 3) +
labs(x = "Método", y = "Valor") +
geom_text(aes(label = Objetos), hjust = .5, vjust = -2, color = "black", size = 3) +
ggtitle("Comparação dos Valores") +
theme_update()
Ddsprova <- as.xts(Ddsprova)
dados <- Ddsprova[,-c(1,22)]
dados <- as.xts(dados)
vetret <- as.list(seq(0,mean(dados$PETR4), length.out = 250))
matcov <- cov(dados)
rfr <- 0.0002644400
listashort <- vector("list",length = length(vetret))
for (i in 1:length(vetret)) {
peso <- vetret[i]
listashort[[i]] <- portfolio.optim(dados,
pm = peso,
riskless = FALSE,
rf = rfr,
covmat = matcov,
shorts=T)
}
Riscoshort <- unlist(lapply(listashort, "[[", "ps"))
Retornoshort <- unlist(lapply(listashort, "[[", "pm"))
Portshort <- data.frame(Riscoshort,Retornoshort)
port.minshorts <- data.frame(
x = Riscoshort[which.min(Portshort$Riscoshort)],
y = Retornoshort[which.min(Portshort$Riscoshort)]
)
ggplot(data = Portshort, aes(x = Riscoshort, y = Retornoshort)) +
geom_point() +
geom_point(data = port.minshorts, aes(x=x,y=y), color = "red") +
labs(x = "Risco", y = "Retorno dos Potifólios", title = "Fronteira")
lista <- vector("list",length = length(vetret))
for (i in 1:length(vetret)) {
peso <- vetret[i]
lista[[i]] <- portfolio.optim(dados,
pm = peso,
riskless = FALSE,
rf = rfr,
covmat = matcov,
shorts=F)
}
Risco <- unlist(lapply(lista, "[[", "ps"))
Retorno <- unlist(lapply(lista, "[[", "pm"))
Port <- data.frame(Risco,Retorno)
port.min <- data.frame(
x = Risco[which.min(Port$Risco)],
y = Retorno[which.min(Port$Risco)]
)
ggplot(data = Port, aes(x = Risco, y = Retorno)) +
geom_point() +
geom_point(data = port.min, aes(x=x,y=y), color = "red") +
labs(x = "Risco", y = "Retorno dos Potifólios", title = "Fronteira")
capmpetr <- data.frame((Ddsprova$PETR4 - Ddsprova$DI),(Ddsprova$IBOV - Ddsprova$DI))
colnames(capmpetr) <- c("Ri","Rm")
CAPMpetr <- lm(capmpetr$Ri ~ capmpetr$Rm)
BetaPETR4 <- coef(CAPMpetr)[2]
capm1 <- data.frame((Ddsprova$VALE3 - Ddsprova$DI),(Ddsprova$IBOV - Ddsprova$DI))
colnames(capm1) <- c("Ri","Rm")
CAPM <- lm(capm1$Ri ~ capm1$Rm)
BetaVALE3 <- coef(CAPM)[2]
capm1 <- data.frame((Ddsprova$KEPL3 - Ddsprova$DI),(Ddsprova$IBOV - Ddsprova$DI))
colnames(capm1) <- c("Ri","Rm")
CAPM <- lm(capm1$Ri ~ capm1$Rm)
BetaKEPL3 <- coef(CAPM)[2]
capm1 <- data.frame((Ddsprova$TASA3 - Ddsprova$DI),(Ddsprova$IBOV - Ddsprova$DI))
colnames(capm1) <- c("Ri","Rm")
CAPM <- lm(capm1$Ri ~ capm1$Rm)
BetaTASA3 <- coef(CAPM)[2]
capm1 <- data.frame((Ddsprova$RENT3 - Ddsprova$DI),(Ddsprova$IBOV - Ddsprova$DI))
colnames(capm1) <- c("Ri","Rm")
CAPM <- lm(capm1$Ri ~ capm1$Rm)
BetaRENT3 <- coef(CAPM)[2]
capm1 <- data.frame((Ddsprova$CRFB3 - Ddsprova$DI),(Ddsprova$IBOV - Ddsprova$DI))
colnames(capm1) <- c("Ri","Rm")
CAPM <- lm(capm1$Ri ~ capm1$Rm)
BetaCRFB3 <- coef(CAPM)[2]
capm1 <- data.frame((Ddsprova$BOBR4 - Ddsprova$DI),(Ddsprova$IBOV - Ddsprova$DI))
colnames(capm1) <- c("Ri","Rm")
CAPM <- lm(capm1$Ri ~ capm1$Rm)
BetaBOBR4 <- coef(CAPM)[2]
capm1 <- data.frame((Ddsprova$ABEV3 - Ddsprova$DI),(Ddsprova$IBOV - Ddsprova$DI))
colnames(capm1) <- c("Ri","Rm")
CAPM <- lm(capm1$Ri ~ capm1$Rm)
BetaABEV3 <- coef(CAPM)[2]
capm1 <- data.frame((Ddsprova$BBAS3 - Ddsprova$DI),(Ddsprova$IBOV - Ddsprova$DI))
colnames(capm1) <- c("Ri","Rm")
CAPM <- lm(capm1$Ri ~ capm1$Rm)
BetaBBAS3 <- coef(CAPM)[2]
capm1 <- data.frame((Ddsprova$BBDC3 - Ddsprova$DI),(Ddsprova$IBOV - Ddsprova$DI))
colnames(capm1) <- c("Ri","Rm")
CAPM <- lm(capm1$Ri ~ capm1$Rm)
BetaBBDC3 <- coef(CAPM)[2]
capm1 <- data.frame((Ddsprova$ITUB3 - Ddsprova$DI),(Ddsprova$IBOV - Ddsprova$DI))
colnames(capm1) <- c("Ri","Rm")
CAPM <- lm(capm1$Ri ~ capm1$Rm)
BetaITUB3 <- coef(CAPM)[2]
capm1 <- data.frame((Ddsprova$GGBR4 - Ddsprova$DI),(Ddsprova$IBOV - Ddsprova$DI))
colnames(capm1) <- c("Ri","Rm")
CAPM <- lm(capm1$Ri ~ capm1$Rm)
BetaGGBR4 <- coef(CAPM)[2]
capm1 <- data.frame((Ddsprova$USIM3 - Ddsprova$DI),(Ddsprova$IBOV - Ddsprova$DI))
colnames(capm1) <- c("Ri","Rm")
CAPM <- lm(capm1$Ri ~ capm1$Rm)
BetaUSIM3 <- coef(CAPM)[2]
capm1 <- data.frame((Ddsprova$BRKM3 - Ddsprova$DI),(Ddsprova$IBOV - Ddsprova$DI))
colnames(capm1) <- c("Ri","Rm")
CAPM <- lm(capm1$Ri ~ capm1$Rm)
BetaBRKM3 <- coef(CAPM)[2]
capm1 <- data.frame((Ddsprova$PRIO3 - Ddsprova$DI),(Ddsprova$IBOV - Ddsprova$DI))
colnames(capm1) <- c("Ri","Rm")
CAPM <- lm(capm1$Ri ~ capm1$Rm)
BetaPRIO3 <- coef(CAPM)[2]
capm1 <- data.frame((Ddsprova$RADL3 - Ddsprova$DI),(Ddsprova$IBOV - Ddsprova$DI))
colnames(capm1) <- c("Ri","Rm")
CAPM <- lm(capm1$Ri ~ capm1$Rm)
BetaRADL3 <- coef(CAPM)[2]
capm1 <- data.frame((Ddsprova$FLRY3 - Ddsprova$DI),(Ddsprova$IBOV - Ddsprova$DI))
colnames(capm1) <- c("Ri","Rm")
CAPM <- lm(capm1$Ri ~ capm1$Rm)
BetaFLRY3 <- coef(CAPM)[2]
capm1 <- data.frame((Ddsprova$SQIA3 - Ddsprova$DI),(Ddsprova$IBOV - Ddsprova$DI))
colnames(capm1) <- c("Ri","Rm")
CAPM <- lm(capm1$Ri ~ capm1$Rm)
BetaSQIA3 <- coef(CAPM)[2]
capm1 <- data.frame((Ddsprova$EMBR3 - Ddsprova$DI),(Ddsprova$IBOV - Ddsprova$DI))
colnames(capm1) <- c("Ri","Rm")
CAPM <- lm(capm1$Ri ~ capm1$Rm)
BetaEMBR3 <- coef(CAPM)[2]
capm1 <- data.frame((Ddsprova$CPFE3 - Ddsprova$DI),(Ddsprova$IBOV - Ddsprova$DI))
colnames(capm1) <- c("Ri","Rm")
CAPM <- lm(capm1$Ri ~ capm1$Rm)
BetaCPFE3 <- coef(CAPM)[2]
betas <- c('BetaABEV3','BetaBBAS3','BetaBBDC3','BetaBOBR4','BetaBRKM3','BetaCRFB3','BetaFLRY3','BetaGGBR4','BetaITUB3','BetaKEPL3','BetaPETR4','BetaPRIO3','BetaRADL3','BetaRENT3','BetaTASA3','BetaUSIM3','BetaVALE3')
Valores <- c(BetaABEV3,BetaBBAS3,BetaBBDC3,BetaBOBR4,BetaBRKM3,BetaCRFB3,BetaFLRY3,BetaGGBR4,BetaITUB3,BetaKEPL3,BetaPETR4,BetaPRIO3,BetaRADL3,BetaRENT3,BetaTASA3,BetaUSIM3,BetaVALE3)
Betas <- data.frame(betas,Valores)
print(Betas)
hist(Betas$Valores)
test <- as.data.frame(Ddsprova)
obj1 <- test[, 2:22]
# Subtrair o valor da primeira coluna de cada linha
obj2 <- obj1 - test$DI
GRSrs <- GRS.test(obj2[,-21], obj2[,21])
# Estatística GRS
GRSrs$GRS.stat
# Valor p do teste GRS
GRSrs$GRS.pval
library(GRS.test)
library(GRS.test)
test <- as.data.frame(Ddsprova)
obj1 <- test[, 2:22]
# Subtrair o valor da primeira coluna de cada linha
obj2 <- obj1 - test$DI
GRSrs <- GRS.test(obj2[,-21], obj2[,21])
# Estatística GRS
GRSrs$GRS.stat
# Valor p do teste GRS
GRSrs$GRS.pval
capmpetr
